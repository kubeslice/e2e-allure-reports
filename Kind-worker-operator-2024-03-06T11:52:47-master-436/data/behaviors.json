{"uid":"b1a8273437954620fa374b796ffaacdd","children":[{"name":"[It] Verify vpn key rotation functionality: rotation Interval should be 30 by default","uid":"d9d1c436caf1a501","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717686199,"duration":199},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: should have status updated from all the worker clusters to COMPLETE","uid":"2fcfe87b9e1d6799","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717686078,"duration":78},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: Should update new certificate and expiry TS","uid":"23b56784ee13e314","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717717076,"duration":31076},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: worker status should be back to COMPLETE state","uid":"9e72b576beee1ee3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717756957,"duration":70957},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: all workers should be in IN_PROGRESS","uid":"8af7a81de8b8b1f5","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717687269,"duration":1269},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: should have FSM's running simultaneously","uid":"29114e9a5112ba11","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717686190,"duration":190},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[AfterSuite]","uid":"e82f766275c1cf2a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709718935790,"duration":1249790},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: all FSM's should get over","uid":"841d0c26f5a6ca6e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717735892,"duration":49892},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: should have created vpnkeyrotation config","uid":"4ebcda65e4ba87ce","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717722567,"duration":36567},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: should update certificate creation and expiry TS once all jobs are over","uid":"10a1b0336470d64b","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717686096,"duration":96},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: should run iperf","uid":"d115142ec17eb4a1","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"failed","time":{"start":1709717686000,"stop":1709717688766,"duration":2766},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[BeforeSuite]","uid":"6a8aa070dc1b4a6a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709718008642,"duration":322642},"flaky":false,"newFailed":false,"newPassed":true,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify vpn key rotation functionality: update sliceconfig and set renewBefore","uid":"8bea8bdd81762213","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709717686000,"stop":1709717686305,"duration":305},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Namespaces are labeled with kubeslice label Delete namespace deleted app ns entry should get removed from cluster objs","uid":"9aab9119fdd1ad0d","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719464973,"duration":11973},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice creation scenarios: when slice red is installed workers should get attached to slice","uid":"802a328e5bdee4a9","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456368,"duration":3368},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace deboard Should remove labels and annotations from pod spec which will remove sidecars from deployments","uid":"efa08eaa7c53cc9e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Creation scenarios Slice with LOW QOS should have vl3 router running","uid":"7a3a35f0bfc81c6a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456271,"duration":3271},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Namespaces are labeled with kubeslice label Onboard label app ns on workers","uid":"8bfa513a5a2d59c0","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454609,"duration":1609},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config creation and deletion Events get recorded for slice config deletion Validating events for slice config deletion","uid":"c8f9c0330f4f766d","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719477784,"duration":24784},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace onboard Should verify iperf connectivity","uid":"dd1661f4937215c9","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  gatewayServiceType: LB >  verify l3 traffic","uid":"83e4838d5912b11d","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  default sliceGatewaySvcType >  should create workerSliceGw cr with default gw svc type & protocol","uid":"fcc0bcbf700ea0da","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453085,"duration":85},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting nsm-manager pod Should restart nsm-manager pod","uid":"29d9aad79253dc5a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting worker-operator pod Should restart worker-operator pod","uid":"b6d5a2bd9204faf9","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice creation scenarios: when slice red is installed install slice blue workers should get attached to slice blue","uid":"e193a83a6cc5c71b","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454833,"duration":1833},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Creation Should fail while creating sliceconfig with with invalid DSCP class in qosprofiledetails","uid":"de3236319e0e6e4e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453197,"duration":197},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Should have application namespaces created","uid":"c59555ac96644506","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455624,"duration":2624},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config creation and deletion Events get recorded for slice config creation Validating events for worker slice gateways creation","uid":"bafd08110f6e1976","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453350,"duration":350},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  default sliceGatewaySvcType >  should create slice gateway cr with default gw svc type & protocol","uid":"17979e9fe7e6f41b","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453162,"duration":162},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Iperf connectivity should onboard deployment in application Namespaces without slice annotations","uid":"f4a60fcc1eb59ab7","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"failed","time":{"start":1709719453000,"stop":1709719463067,"duration":10067},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It]  QosProfile tests QosProfile delete validation should remove vl3 router from spoke","uid":"effab718b2fc4cee","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456023,"duration":3023},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] GW redundacy tests Test gw redundancy Should verify cluster CR status field","uid":"a1abf38207ad0179","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Update Should update while deploying sliceconfig with existing slice name","uid":"65e93c3a3d1d4764","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453743,"duration":743},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should remove successfully while Deleting Slice after removing the applicationNamespace in namespaceIsolationProfile part in slice configs","uid":"9dafa548a463d435","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454694,"duration":1694},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  gatewayServiceType: LB >  Verify load balancer creation","uid":"296f169cdf5ccd99","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should fail while creating namespaces with same name in both allowedNamespace and applicationNamespace","uid":"c0bd0bbee366c122","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453216,"duration":216},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Creation Should fail while creating sliceconfig with invalid values on slice subnet","uid":"8b92aab6c46926cc","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453172,"duration":172},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Edit NodeIP tests for cluster CR,  Edit NodeIP validation,  Edit node IP in cluster spec","uid":"bcb0d44a35bd3bae","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719505630,"duration":52630},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It]  QosProfile tests QosProfile Create validation Creates qosprofile","uid":"a3f95973681d8061","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454002,"duration":1002},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  default sliceGatewaySvcType >  should create workerSliceConfig cr with default gw svc type & protocol","uid":"8732993fd38a1c39","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453095,"duration":95},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NodeRestartSlice Testing node restart iperf connectivity across multi cluster","uid":"6580d87a7de7556","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"failed","time":{"start":1709719453000,"stop":1709719473322,"duration":20322},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting forwarder-kernel pod Should restart forwarder-kernel pod","uid":"4078bcfad2e81d1","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice deletion tests: Slice is installed & validated Slice object is deleted from hub should remove gateway pod from spoke","uid":"1457353dca1eccf2","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719471068,"duration":18068},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should create slice for valid namespace and valid clusters in applicationNamespaces of sliceconfigs manifest","uid":"ee95cd4f85b5ef1a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455456,"duration":2456},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice creation scenarios: when slice red is installed install slice blue workers should have gateway pods from both slices","uid":"d8b1fda23799fa32","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719599177,"duration":146177},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity Should install iperf-server on server cluster","uid":"8957421313ccbea","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Attach/Deattach Scenario Attach cluster to a slice  when Deattach cluster from slice  should have gateway pod running on attached cluster","uid":"ded233f288b1fbe8","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"failed","time":{"start":1709719453000,"stop":1709719953178,"duration":500178},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity Should have application namespaces created","uid":"f1ddb51a70a4a823","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455990,"duration":2990},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol should install slice on each worker cluster with correct namespaceisolationprofile","uid":"c460bac920cbdf9d","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453121,"duration":121},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Creation Should fail while creating sliceconfig with bandwithguaranteedkbps more than bandwidthceilingkbps in qosprofiledetailsnvalid ","uid":"b4de81ce628a82ac","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  gatewayServiceType: LB >  should create workerSliceConfig cr with gw svc type=LB & protocol=TCP","uid":"e0965f7ae73a6cd3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config creation and deletion Events get recorded for slice config deletion Validating events for worker slice configs deletion","uid":"7fdd4d16247b5847","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453297,"duration":297},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Attach/Deattach Scenario Attach cluster to a slice  when Deattach cluster from slice  should have vl3 router running on attached cluster","uid":"82b05e74766296c7","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453013,"duration":13},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] GW redundacy tests Test gw redundancy Should have GW pod running","uid":"43c1da442a761202","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace onboard Should mutate deployments with labels and annotations with nsm sidecars injected","uid":"bbd1a9c8225692ed","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"failed","time":{"start":1709719453000,"stop":1709719491226,"duration":38226},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It]  QosProfile tests QosProfile Create validation Create qos profile- validation of BandwidthCeilingKbps > BandwidthGuaranteedKbps","uid":"f1e155dc89bc24a5","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453335,"duration":335},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config creation and deletion Events get recorded for slice config creation Validating events for slice gateway job creation","uid":"6031ea478b29ec78","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456907,"duration":3907},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Namespaces are labeled with kubeslice label Onboard cluster objs should have app ns & attached slice entry","uid":"6ef240dbad5289a2","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453602,"duration":602},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for service export creation and deletion Events get recorded for service export creation Validating events for worker service imports creation","uid":"94b14928e26f31d8","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456927,"duration":3927},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should fail when deploying with invalid namespace in both applicationNamespace and allowedNamespace","uid":"fe01cddfd70d254e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453749,"duration":749},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config creation and deletion Events get recorded for slice config deletion Validating events for secrets deletion","uid":"16ad59b5d9a6428b","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453211,"duration":211},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace deboard Should remove labels and annotaions from pod spec which will remove sidecars from statefulsets","uid":"e39702aea9654671","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[AfterSuite]","uid":"ffd2dcf0ad920860","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709720699263,"duration":1246263},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  gatewayServiceType: LB >  should create workerSliceGw cr with gw svc type=LB & protocol=TCP","uid":"b20c8e95f9773954","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config events on worker Events get recorded for slice config delete on worker Validating events for worker slice configs deletion","uid":"1ce3a4ecc3e96580","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719478435,"duration":25435},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NodeRestartSlice Testing node restart Should have application namespaces created","uid":"4fdac55ab6dc5148","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453226,"duration":226},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting vl3 pod Should restart vl3 pod","uid":"a3213bd63b8c07cd","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Iperf connectivity Verify Iperf traffic","uid":"ab4cebf8317df054","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity Check bandwidth ceiling","uid":"faec31e20f87c6a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It]  QosProfile tests QosProfile delete validation should remove gateway pod from spoke","uid":"a607c974b38393de","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453004,"duration":4},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Update Should fail while updating sliceconfig with with invalid DSCP class in qosprofiledetails","uid":"eeb175d9e71a57ce","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453748,"duration":748},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting worker-operator pod Check ping between iperf-server and iperf-client after worker-operator pod restart","uid":"a4a4dcaccb3a370e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should successfully deploy for valid namespace creating clusters with * in both applicationNamespace and allowedNamespace","uid":"f8f6a963b675075d","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453768,"duration":768},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should fail when deploying clusters in namespaceisolationprofile with * and a cluster name in both applicationNamespace and allowedNamespace","uid":"3eb4c1ee5c39bce","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453408,"duration":408},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting mesh-dns pod Check ping between iperf-server and iperf-client after mesh-dns pod restart","uid":"3660683f3a0b3592","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] GW redundacy tests Test gw redundancy run iperf","uid":"690e8e9ebb23fa0c","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity Verify Iperf traffic","uid":"a8e3e3b1dee89a99","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting iperf-client pod Check ping between iperf-server and iperf-client after iperf-client pod restart","uid":"6e9a7be4ecaca66","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NodeRestartSlice Testing node restart should have vl3 router running","uid":"88b1e8920000c4e0","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456081,"duration":3081},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] GW redundacy tests Test gw redundancy should able to remove the label from gw pod","uid":"4818bd0ea6a4ff06","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config events on worker Events get recorded for slice config update on worker Validating events for slice configs updates","uid":"56ef483f08491f8a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455715,"duration":2715},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol should contain the allowed namespaces","uid":"30474f871f6ff68","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453180,"duration":180},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  gatewayServiceType: LB >  verify slice gw edge creation","uid":"28d08cbd693264e5","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It]  QosProfile tests QosProfile delete validation Delete qosProfile positive scenario","uid":"93ca335b1f095493","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453426,"duration":426},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Creation scenarios Slice with LOW QOS should have gateway pod running","uid":"7b53e2b0573f273a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719468041,"duration":15041},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Creation scenarios Slice with MEDIUM QOS should have vl3 router running","uid":"b0287f9dde37baa7","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719458953,"duration":5953},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity Application namespaces should be isolated","uid":"3c26342113a71dc0","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity Should install iperf-sleep on client cluster","uid":"20b7057343b29bb5","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"failed","time":{"start":1709719453000,"stop":1709719466201,"duration":13201},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  default sliceGatewaySvcType >  should create slice cr with default gw svc type & protocol","uid":"e83b18074afda9a4","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453116,"duration":116},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NodeRestartSlice Testing node restart should re-establish connection on node restart","uid":"ad2c1e2df32b3207","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace onboard Should mutate daemonsets with labels and annotations with nsm sidecars injected","uid":"5a9b9e0de5336997","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] GW redundacy tests Test gw redundancy Should have vl3 pod running","uid":"285ae722e59c2b69","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453024,"duration":24},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace deboard Should remove labels and annotaions from pod spec which will remove sidecars from daemonsets","uid":"83f13b0f1cadd538","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting vl3 pod Check ping between iperf-server and iperf-client after vl3 pod restart","uid":"40da546e0cfc7e50","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity should have gateway pod running","uid":"dbc5c649791e6d7f","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719499177,"duration":46177},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Update Should fail while updating sliceconfig with invalid clusters","uid":"979e5ea97b49289c","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453583,"duration":583},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Update Should fail while updating sliceconfig with bandwithguaranteedkbps more than bandwidthceilingkbps in qosprofiledetailsnvalid ","uid":"cfce53fc099ef753","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453543,"duration":543},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice qos config deletion Validating events for slice qos config deletion","uid":"cb7cff6bd5c7be83","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453762,"duration":762},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting iperf-server pod Check ping between iperf-server and iperf-client after iperf-server pod restart","uid":"326948f731de7539","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Attach/Deattach Scenario Attach cluster to a slice  when Deattach cluster from slice  should have vl3 router deleted from deattach cluster","uid":"d89020f6242e7e07","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719475126,"duration":22126},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  default sliceGatewaySvcType >  verify slice healthy","uid":"ae7c4503b0d44d2","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719575325,"duration":122325},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Namespaces are labeled with kubeslice label Offboard remove label from app ns","uid":"cecbc8edb2c70b55","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453327,"duration":327},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity Verify Connectivity between iperf-server and iperf-client","uid":"6f7b9835edffa6bf","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Creation Should fail while creating sliceconfig with invalid values on slice name","uid":"d688a141064dfa6","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453303,"duration":303},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for service export creation and deletion Events get recorded for service export deletion Validating events for service export deletion","uid":"6062754113e63dfc","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455684,"duration":2684},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Creation Should fail while creating sliceconfig with invalid clusters","uid":"9757a7eb841e8754","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453261,"duration":261},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for service export creation and deletion Events get recorded for service export deletion Validating events for worker service imports deletion","uid":"217c0b3969c8c039","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454860,"duration":1860},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] GW redundacy tests Test gw redundancy checking if gw pods are balanced after adding the label to the node","uid":"7b2df816c133d3e3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[BeforeSuite]","uid":"5a9538a3cdc74c0f","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719602015,"duration":149015},"flaky":false,"newFailed":false,"newPassed":true,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Slice is created with onboarded application namespaces Should have slices on workers","uid":"5086eddbc57920da","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456014,"duration":3014},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Creation scenarios Slice with MEDIUM QOS should reconcile medium qos slice","uid":"e1772e0b65cc5d9e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453293,"duration":293},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol Should have application namespaces created","uid":"487910c79b31cf3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455835,"duration":2835},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Edit NodeIP tests for cluster CR,  Edit NodeIP validation,  Test nodeip validity >  Support more than two node ips in auto detection","uid":"5de4df036196c72a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719456233,"duration":3233},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Namespaces are labeled with kubeslice label Offboard slice get detached from app ns in cluster objects","uid":"275b81f88a9d9aa4","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453385,"duration":385},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests Iperf App connectivity should have vl3 router running","uid":"fd395ff812c4e7a0","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455069,"duration":2069},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol should have vl3 router running","uid":"44a337f52f5fc8dc","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719457069,"duration":4069},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice creation scenarios: when slice red is installed workers should have vl3 router pods running","uid":"95a177fbf2033d3f","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455075,"duration":2075},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol Should contain application namespaces","uid":"5744d2340f345abd","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453334,"duration":334},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting iperf-client pod Should restart iperf-client pod","uid":"85b6d9648a5a074e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol should have gateway pod running","uid":"e04ae473545fc866","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719621540,"duration":168540},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Iperf connectivity Verify Connectivity between iperf-server and iperf-client","uid":"983693eb2a811bcf","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should successfully deploy slice for valid namespace and valid clusters in allowedNamespaces of sliceconfigs manifest","uid":"79e964e32ac000d3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454228,"duration":1228},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting forwarder-kernel pod Check ping between iperf-server and iperf-client after forwarder-kernel pod restart","uid":"b37a1e94bc98c3f3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice creation scenarios: when slice red is installed workers should have gateway pod running","uid":"3bd5c5494d69c3da","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719479119,"duration":26119},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Attach/Deattach Scenario Attach cluster to a slice  when Deattach cluster from slice  should have gateway pod deleted from deattached cluster","uid":"b2b7d2f5814b0e64","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719473065,"duration":20065},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Edit NodeIP tests for cluster CR,  Edit NodeIP validation,  Node IP Auto-detection should work","uid":"3b528d7295ce2af3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453735,"duration":735},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Edit NodeIP tests for cluster CR,  Edit NodeIP validation,  Test nodeip validity >  Verify Events - should have ClusterNodeIpAutoDetected event in auto-detection","uid":"a948f36974ab7423","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453718,"duration":718},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  default sliceGatewaySvcType >  verify l3 traffic is not working when gw svc type=NodePort","uid":"d1103e633c9aeaae","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453714,"duration":714},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Edit NodeIP tests for cluster CR,  Edit NodeIP validation,  Test nodeip validity >  Verify Node IP address in cluster status should match with openvpn server endpoint ip","uid":"f3a3b14a6d01ec2c","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719502194,"duration":49194},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config creation and deletion Events get recorded for slice config creation Validating events for worker slice configs creation","uid":"6ac5c223e6b40b30","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454148,"duration":1148},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Negative Scenario tests Slice Config Negative Scenario Update Should fail while updating sliceconfig with invalid values on slice subnet","uid":"b49f0b6d2e275e4f","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453667,"duration":667},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] GW redundacy tests Test gw redundancy there should be two pods in one node (not balanced)","uid":"9c118b0a1a81bfdb","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice deletion tests: Slice is installed & validated Slice object is deleted from hub should remove vl3 router from spoke","uid":"7e4bffdaef047e7b","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719510050,"duration":57050},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting nsm-manager pod Check ping between iperf-server and iperf-client after nsm-manager pod restart","uid":"a9d97ed9e870c80f","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Creation scenarios Slice with MEDIUM QOS should have gateway pod running","uid":"1f0f3688902797c","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719473059,"duration":20059},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol should remove network policy resource from application namespace once the isolationEnabled is set to false","uid":"266171982ca9d1c2","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719468621,"duration":15621},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Namespaces are labeled with kubeslice label Delete namespace deboarded app ns gets deleted","uid":"36cdd00e62e51674","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719463916,"duration":10916},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting mesh-dns pod Should restart mesh-dns pod","uid":"9b16d295916c435f","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Config Events Test Events get recorded for slice config creation and deletion Events get recorded for slice config deletion Validating events for worker slice gateways deletion","uid":"c234ffa6e9884ac5","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453163,"duration":163},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should fail while Deleting Slice without removing the namespaceIsolationProfile part in slice configs","uid":"5af96250b251e209","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453081,"duration":81},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It]  QosProfile tests QosProfile delete validation Delete qos profile - negative scenario","uid":"e04bcc4481cb27b2","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719454958,"duration":1958},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace onboard Should mutate pods with labels and annotations with nsm sidecars injected","uid":"44db2492b7fbfb9c","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol Should install networkpolicies in all application namespaces","uid":"b088c5a6ee2cc85d","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453414,"duration":414},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] mutation webhook tests Testing mutation webhook functionality after namespace onboard Should mutate statefulsets with labels and annotations with nsm sidecars injected","uid":"987e81b83d9ea797","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Hub netpol scenarios: Slice Configs Netpol scenarios Should fail when deploying with invalid clusters in both applicationNamespace and allowedNamespace","uid":"e1689e6c9a760417","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453867,"duration":867},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice Creation scenarios Slice with LOW QOS should reconcile low qos slice","uid":"cef17095fc0e194f","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453323,"duration":323},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Namespace reconcile test scenarios: when Slice is created with onboarded application namespaces Should have application namespaces created & labeled","uid":"bebb8b5823b80b","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719471156,"duration":18156},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Pod-restart test cases Restarting iperf-server pod Should restart iperf-server pod","uid":"de4fb1e5869c893e","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"skipped","time":{"start":1709719453000,"stop":1709719453000,"duration":0},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] NetworkPolicy tests slice with netpol Should label all application namespaces with kubeslice namespace","uid":"34bd9933f480ccbe","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719453195,"duration":195},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Test Slice Gateway Service config >  gatewayServiceType: LB >  verify slice healthy","uid":"c21648220c015059","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"failed","time":{"start":1709719453000,"stop":1709720190910,"duration":737910},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Slice creation scenarios: when slice red is installed install slice blue workers should have vl3 routers from both slices","uid":"156f52ac53d5db1a","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709719453000,"stop":1709719455089,"duration":2089},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify gw redundancy wrt health check when both gateways are down should have gw in error state","uid":"821c7760c6b23b77","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723246749,"duration":119749},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Testing Slice Health feature >  Verify various properties of SliceHealth object in worker slice config spec >  Should have slice slicerouter status Error when slicerouter is unavailable","uid":"f10da73a75a18385","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723252810,"duration":125810},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[BeforeSuite]","uid":"b22f5254a6dcd7aa","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723320067,"duration":193067},"flaky":false,"newFailed":false,"newPassed":true,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Testing Slice Health feature >  Verify various properties of SliceHealth object in worker slice config spec >  Should have overall slice health status Normal in workersliceconfig CR","uid":"8f9b72ecb9d9c566","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723127235,"duration":235},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Testing Slice Health feature >  Verify various properties of SliceHealth object in worker slice config spec >  Should not have slice ingress status when ingress is unavailable","uid":"5d68115ebf0bc9e8","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723244757,"duration":117757},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Testing Slice Health feature >  Verify various properties of SliceHealth object in worker slice config spec >  Should have slicegateway in Error state when both slicegateways are unavailable","uid":"7d0da5cb1f2ba9b2","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723367469,"duration":240469},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[AfterSuite]","uid":"487f67ff256f3f2","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709724408503,"duration":1281503},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify gw redundancy wrt health check when both gateways are up should have tunnel status in normal state","uid":"9cefc0e6d7207033","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723127914,"duration":914},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify gw redundancy wrt health check when atleast one gateway is down should have gw health in warning state","uid":"104d9f9001a2a175","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723246887,"duration":119887},"flaky":false,"newFailed":false,"newPassed":true,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify gw redundancy wrt health check when both gateways are down should have tunnel status in error state","uid":"4ac11a46d46ca46","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723127149,"duration":149},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify gw redundancy wrt health check when atleast one gateway is down should have tunnel status in warning state","uid":"2947b00c249ade23","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723127136,"duration":136},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Testing Slice Health feature >  Verify various properties of SliceHealth object in worker slice config spec >  Should have individual component status Normal","uid":"d9ccd6b58fadee19","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723136827,"duration":9827},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Testing Slice Health feature >  Verify various properties of SliceHealth object in worker slice config spec >  Should have slice egress unavailable when egress is unavailable","uid":"8f78dd72aeba50fa","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723246511,"duration":119511},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify gw redundancy wrt health check when both gateways are up should have gw in normal state","uid":"21577a29c5eeafc6","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723247059,"duration":120059},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]},{"name":"[It] Verify gw redundancy wrt health check when slice is installed should eventually have slicehealth status normal","uid":"262ca8951854a9f3","parentUid":"b1a8273437954620fa374b796ffaacdd","status":"passed","time":{"start":1709723127000,"stop":1709723249414,"duration":122414},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"name":"behaviors"}