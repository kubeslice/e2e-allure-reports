{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"Expected\n    <int>: 0\nto equal\n    <int>: 2","children":[{"name":"[It] Namespace reconcile test scenarios: when Namespaces are labeled with kubeslice label Onboard cluster objs should have app ns & attached slice entry","uid":"1b912b2d0c3d8677","parentUid":"21a0eac103813b1cd1fb3afeaf229696","status":"failed","time":{"start":1686755948000,"stop":1686755973039,"duration":25039},"flaky":false,"newFailed":true,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"21a0eac103813b1cd1fb3afeaf229696"},{"name":"Expected\n    <*errors.errorString | 0xc0004a7540>: {\n        s: \"no slicegw present\",\n    }\nto be nil","children":[{"name":"[It] GW redundacy tests Test gw redundancy should able to remove the label from gw pod","uid":"4a9df58fdab63d90","parentUid":"a0633f1be0c7f8d8d636e96bc6133f0e","status":"failed","time":{"start":1686755948000,"stop":1686756010757,"duration":62757},"flaky":false,"newFailed":true,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"a0633f1be0c7f8d8d636e96bc6133f0e"},{"name":"Unexpected error:\n    <*shell.ErrWithCmdOutput | 0xc000457998>: {\n        Underlying: <*exec.ExitError | 0xc000953f60>{\n            ProcessState: {\n                pid: 8391,\n                status: 256,\n                rusage: {\n                    Utime: {Sec: 0, Usec: 50236},\n                    Stime: {Sec: 0, Usec: 33490},\n                    Maxrss: 47436,\n                    Ixrss: 0,\n                    Idrss: 0,\n                    Isrss: 0,\n                    Minflt: 1759,\n                    Majflt: 0,\n                    Nswap: 0,\n                    Inblock: 0,\n                    Oublock: 0,\n                    Msgsnd: 0,\n                    Msgrcv: 0,\n                    Nsignals: 0,\n                    Nvcsw: 328,\n                    Nivcsw: 384,\n                },\n            },\n            Stderr: nil,\n        },\n        Output: {\n            stdout: {\n                Lines: nil,\n                merged: {\n                    Mutex: {state: 0, sema: 0},\n                    Lines: [\n                        \"The SliceConfig \\\"slice-event\\\" is invalid: Field: ApplicationNamespaces: Forbidden: Please deboard the namespaces before deletion of slice.\",\n                    ],\n                },\n            },\n            stderr: {\n                Lines: [\n                    \"The SliceConfig \\\"slice-event\\\" is invalid: Field: ApplicationNamespaces: Forbidden: Please deboard the namespaces before deletion of slice.\",\n                ],\n                merged: {\n                    Mutex: {state: 0, sema: 0},\n                    Lines: [\n                        \"The SliceConfig \\\"slice-event\\\" is invalid: Field: ApplicationNamespaces: Forbidden: Please deboard the namespaces before deletion of slice.\",\n                    ],\n                },\n            },\n            merged: {\n                Mutex: {state: 0, sema: 0},\n                Lines: [\n                    \"The SliceConfig \\\"slice-event\\\" is invalid: Field: ApplicationNamespaces: Forbidden: Please deboard the namespaces before deletion of slice.\",\n                ],\n            },\n        },\n    }\n    error while running command: exit status 1; The SliceConfig \"slice-event\" is invalid: Field: ApplicationNamespaces: Forbidden: Please deboard the namespaces before deletion of slice.\noccurred","children":[{"name":"[It] Slice Config Events Test Events get recorded for service export creation and deletion Events get recorded for service export deletion Validating events for worker service imports deletion","uid":"8c6db84091ffbf1a","parentUid":"b1f44d4ec71149e8f152ccd800dbe496","status":"failed","time":{"start":1686755948000,"stop":1686755949837,"duration":1837},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"b1f44d4ec71149e8f152ccd800dbe496"},{"name":"Timed out after 210.009s.\nExpected an error to have occurred.  Got:\n    <nil>: nil","children":[{"name":"[AfterSuite]","uid":"be62dbd2cfa05920","parentUid":"dd7c81ed8d0bfce45d7c50384547b0c5","status":"failed","time":{"start":1686755948000,"stop":1686756224734,"duration":276734},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"dd7c81ed8d0bfce45d7c50384547b0c5"},{"name":"Timed out after 200.003s.\nExpected\n    <int>: 0\nto equal\n    <int>: 2","children":[{"name":"[It] NetworkPolicy tests Iperf App connectivity should have gateway pod running","uid":"f1ed3d44021406f1","parentUid":"b86ccb5b42735e234d2f05e14f177832","status":"failed","time":{"start":1686755948000,"stop":1686756163499,"duration":215499},"flaky":false,"newFailed":true,"newPassed":false,"newBroken":false,"retriesCount":0,"retriesStatusChange":false,"parameters":[]}],"uid":"b86ccb5b42735e234d2f05e14f177832"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}